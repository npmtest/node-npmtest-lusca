{"/home/travis/build/npmtest/node-npmtest-lusca/test.js":"/* istanbul instrument in package npmtest_lusca */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lusca/lib.npmtest_lusca.js":"/* istanbul instrument in package npmtest_lusca */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_lusca = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_lusca = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-lusca/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-lusca && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_lusca */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_lusca\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_lusca.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_lusca.rollup.js'] =\n            local.assetsDict['/assets.npmtest_lusca.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_lusca.__dirname + '/lib.npmtest_lusca.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/index.js":"/*───────────────────────────────────────────────────────────────────────────*\\\n│  Copyright (C) 2014 eBay Software Foundation                                │\n│                                                                             │\n│hh ,'\"\"`.                                                                    │\n│  / _  _ \\  Licensed under the Apache License, Version 2.0 (the \"License\");  │\n│  |(@)(@)|  you may not use this file except in compliance with the License. │\n│  )  __  (  You may obtain a copy of the License at                          │\n│ /,'))((`.\\                                                                  │\n│(( ((  )) ))    http://www.apache.org/licenses/LICENSE-2.0                   │\n│ `\\ `)(' /'                                                                  │\n│                                                                             │\n│   Unless required by applicable law or agreed to in writing, software       │\n│   distributed under the License is distributed on an \"AS IS\" BASIS,         │\n│   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  │\n│   See the License for the specific language governing permissions and       │\n│   limitations under the License.                                            │\n\\*───────────────────────────────────────────────────────────────────────────*/\n'use strict';\n\n\n/**\n * Outputs all security headers based on configuration\n * @param {Object} options The configuration object.\n */\nvar lusca = module.exports = function (options) {\n    var headers = [];\n\n    if (options) {\n        Object.keys(lusca).forEach(function (key) {\n            var config = options[key];\n\n            if (config) {\n                headers.push(lusca[key](config));\n            }\n        });\n    }\n\n    return function lusca(req, res, next) {\n        var chain = next;\n\n        headers.forEach(function (header) {\n            chain = (function (next) {\n                return function (err) {\n                    if (err) {\n                        next(err);\n                        return;\n                    }\n                    header(req, res, next);\n                };\n            }(chain));\n        });\n\n        chain();\n    };\n};\n\n\nlusca.csrf = require('./lib/csrf');\nlusca.csp = require('./lib/csp');\nlusca.hsts = require('./lib/hsts');\nlusca.p3p = require('./lib/p3p');\nlusca.xframe = require('./lib/xframes');\nlusca.xssProtection = require('./lib/xssprotection');\nlusca.nosniff = require('./lib/nosniff');\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/csrf.js":"'use strict';\n\n\nvar token = require('./token');\n\n\n/**\n * CSRF\n * https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * @param {Object} options\n *    key {String} The name of the CSRF token in the model. Default \"_csrf\".\n *    impl {Object} An object with create/validate methods for custom tokens. Optional.\n *    header {String} The name of the response header containing the CSRF token. Default \"x-csrf-token\".\n */\nmodule.exports = function (options) {\n    var impl, key, header, secret, cookie;\n\n    options = options || {};\n\n    if (options.angular) {\n        options.header = 'X-XSRF-TOKEN';\n        options.cookie = 'XSRF-TOKEN';\n    }\n\n    key = options.key || '_csrf';\n    impl = options.impl || token;\n    header = options.header || 'x-csrf-token';\n    secret = options.secret || '_csrfSecret';\n    cookie = options.cookie;\n\n    function getCsrf(req, secret) {\n        var _impl, validate, _token, _secret;\n\n        _impl = impl.create(req, secret);\n        validate = impl.validate || _impl.validate;\n        _token = _impl.token || _impl;\n        _secret = _impl.secret;\n\n        return {\n            validate: validate,\n            token: _token,\n            secret: _secret\n        };\n    }\n\n    function setToken(res, token) {\n        res.locals[key] = token;\n        if (cookie) {\n            res.cookie(cookie, token);\n        }\n    }\n\n\n    return function checkCsrf(req, res, next) {\n        var method, _token, errmsg;\n\n        var csrf = getCsrf(req, secret);\n        setToken(res, csrf.token);\n\n        req.csrfToken = function csrfToken() {\n            var newCsrf = getCsrf(req, secret);\n            if (csrf.secret && newCsrf.secret && csrf.secret === newCsrf.secret) {\n                return csrf.token;\n            }\n\n            csrf = newCsrf;\n            setToken(res, csrf.token);\n            return csrf.token;\n        };\n\n        // Move along for safe verbs\n        method = req.method;\n        if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS') {\n            return next();\n        }\n\n        // Validate token\n        _token = (req.body && req.body[key]) || req.headers[header.toLowerCase()];\n\n        if (csrf.validate(req, _token)) {\n            next();\n        } else {\n            res.statusCode = 403;\n            if (!_token) {\n                errmsg = 'CSRF token missing';\n            } else {\n                errmsg = 'CSRF token mismatch';\n            }\n            next(new Error(errmsg));\n        }\n    };\n};\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/token.js":"'use strict';\n\n\nvar crypto = require('crypto');\nvar LENGTH = 10;\n\n\n\nfunction create(req, secretKey) {\n\n    var session = req.session;\n    if (session === undefined) {\n        throw new Error('lusca requires req.session to be available in order to maintain state');\n    }\n    var secret = session[secretKey];\n    // Save the secret for validation\n    if (!secret) {\n        session[secretKey] = crypto.pseudoRandomBytes(LENGTH).toString('base64');\n        secret = session[secretKey];\n    }\n\n    return {\n        secret: secret,\n        token: tokenize(salt(LENGTH), secret),\n        validate: function validate(req, token) {\n            if (typeof token !== 'string') {\n                return false;\n\n            }\n            return token === tokenize(token.slice(0, LENGTH), req.session[secretKey]);\n        }\n    };\n}\n\nfunction tokenize(salt, secret) {\n    return salt + crypto.createHash('sha1').update(salt + secret).digest('base64');\n}\n\n\nfunction salt(len) {\n    var str = '',\n        chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < len; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n\n    return str;\n}\n\n\n\nmodule.exports = {\n    create: create\n};\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/csp.js":"'use strict';\n\nvar thing = require('core-util-is');\n\n\n/**\n * Content Security Policy (CSP)\n * https://www.owasp.org/index.php/Content_Security_Policy\n * @param {Object} options The CSP policy.\n */\nmodule.exports = function (options) {\n    var policyRules = options && options.policy,\n        isReportOnly = options && options.reportOnly,\n        reportUri = options && options.reportUri,\n        value, name;\n\n    name = 'Content-Security-Policy';\n\n    if (isReportOnly) {\n        name += '-Report-Only';\n    }\n\n    value = createPolicyString(policyRules);\n\n    if (reportUri) {\n        if (value !== '') {\n            value += '; ';\n        }\n        value += 'report-uri ' + reportUri;\n    }\n\n    return function csp(req, res, next) {\n        res.header(name, value);\n        next();\n    };\n};\n\nvar createPolicyString = module.exports.createPolicyString = function (policy) {\n    var entries;\n\n    if (thing.isString(policy)) {\n        return policy;\n    }\n\n    if (thing.isArray(policy)) {\n        return policy.map(createPolicyString).join('; ');\n    }\n\n    if (thing.isObject(policy)) {\n        entries = Object.keys(policy).map(function (directive) {\n            if (policy[directive] === 0 || policy[directive]) {\n                directive += ' ' + policy[directive];\n            }\n            return directive;\n        });\n\n        return createPolicyString(entries);\n    }\n\n    throw Error('invalid csp policy - must be array, string, or plain object');\n};\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/hsts.js":"'use strict';\n\n\n/**\n * HSTS - Http Strict Transport Security\n * https://www.owasp.org/index.php/HTTP_Strict_Transport_Security\n * @param {Object} options\n *     maxAge {Number} The max age of the header. Required.\n *     includeSubDomains {Boolean}\n */\nmodule.exports = function (options) {\n    var value;\n\n    options = options || {};\n\n    value = (options.maxAge !== undefined) ? 'max-age=' + options.maxAge : '';\n    value += (value && options.includeSubDomains) ? '; includeSubDomains' : '';\n    value += (value && options.preload) ? '; preload' : '';\n\n    return function hsts(req, res, next) {\n        if (value) {\n            res.header('Strict-Transport-Security', value);\n        }\n\n        next();\n    };\n};\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/p3p.js":"'use strict';\n\n\n/**\n * P3P - Platform for Privacy Preferences Project\n * http://support.microsoft.com/kb/290333\n * @param {String} value The P3P header value.\n */\nmodule.exports = function (value) {\n    return function p3p(req, res, next) {\n        if (value) {\n            res.header('P3P', value);\n        }\n        \n        next();\n    };\n};","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/xframes.js":"'use strict';\n\n\n/**\n * Xframes\n * https://www.owasp.org/index.php/Clickjacking\n * @param {String} value The XFRAME header value, e.g. DENY, SAMEORIGIN.\n */\nmodule.exports = function (value) {\n    return function xframe(req, res, next) {\n        res.header('X-FRAME-OPTIONS', value);\n        next();\n    };\n};","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/xssprotection.js":"'use strict';\n\n/**\n * X-XSS-Protection\n * http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-iv-the-xss-filter.aspx\n */\nmodule.exports = function xssProtection(options) {\n    options = options || {};\n\n    // `enabled` should be either `1` or `0`\n    var enabled = (options.enabled !== undefined) ? +options.enabled : 1;\n    var mode = options.mode || 'block';\n\n    return function xssProtection(req, res, next) {\n        res.header('X-XSS-Protection', enabled + '; mode=' + mode);\n        next();\n    };\n};\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/lib/nosniff.js":"'use strict';\n\n/**\n * X-Content-Type-Options\n * https://blogs.msdn.microsoft.com/ie/2008/09/02/ie8-security-part-vi-beta-2-update/\n */\nmodule.exports = function nosniff() {\n    return function nosniff(req, res, next) {\n        res.header('X-Content-Type-Options', 'nosniff');\n        next();\n    };\n};\n","/home/travis/build/npmtest/node-npmtest-lusca/node_modules/lusca/Gruntfile.js":"/*───────────────────────────────────────────────────────────────────────────*\\\n│  Copyright (C) 2014 eBay Software Foundation                                │\n│                                                                             │\n│hh ,'\"\"`.                                                                    │\n│  / _  _ \\  Licensed under the Apache License, Version 2.0 (the \"License\");  │\n│  |(@)(@)|  you may not use this file except in compliance with the License. │\n│  )  __  (  You may obtain a copy of the License at                          │\n│ /,'))((`.\\                                                                  │\n│(( ((  )) ))    http://www.apache.org/licenses/LICENSE-2.0                   │\n│ `\\ `)(' /'                                                                  │\n│                                                                             │\n│   Unless required by applicable law or agreed to in writing, software       │\n│   distributed under the License is distributed on an \"AS IS\" BASIS,         │\n│   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  │\n│   See the License for the specific language governing permissions and       │\n│   limitations under the License.                                            │\n\\*───────────────────────────────────────────────────────────────────────────*/\n'use strict';\n\nmodule.exports = function (grunt) {\n\n    grunt.initConfig({\n        jshint: {\n            files: ['Gruntfile.js', 'index.js', 'lib/**/*.js', 'test/**/*.js'],\n            options: {\n                jshintrc: '.jshintrc'\n            }\n        },\n        mochaTest: {\n            src: ['test/*.js'],\n            options: {\n                globals: ['chai'],\n                timeout: 15000,\n                ignoreLeaks: false,\n                ui: 'bdd',\n                reporter: 'spec',\n                grep: grunt.option('grep') || 0\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n    grunt.loadNpmTasks('grunt-mocha-test');\n\n    grunt.registerTask('test', ['jshint', 'mochaTest']);\n\n};"}